% [C,S,T,Pc,Rp,F,Pf,R,Pr,CB]=linreg_jo(X,Y,NB)
%   linear regression analysis of the form :
%   
%   Y = c1*X1 + c2*X2 + c3*X3 ...
%  
%   In X, each row corresponds to an observation and each column 
%   to a variable. X may contain both real and dummy variables. 
%   The parameters are estimated by means of a least-squares fit 
%   and a Monte-Carlo bootstrap method (default=1000 or NB steps) 
%   is used to estimate standard deviations. The function returns:
%   
%   C  => fit parameters
%   S  => standard deviations of fit parameters  
%   T  => T-values Ho: C==0
%   Pc => significance levels 
%   Rp => partial correlation coefficients
%   F  => F-ratio of the regression
%   Pf => significance of regression
%   R  => correlation coefficient 
%   Pr => significance of correlation
%   CB => fit parameters of each bootstrap step
%
%   Jeroen Goossens

function [C,S,T,Pc,Rp,F,Pf,R,Pr,CB]=linreg_jo(X,Y,NB);

%%%% Calculate coefficients using least square fit
C = (X\Y)';

%%%% Estimate standard error using bootstrap 
N=length(Y);
if nargin==2, 
  NB = 1000; 
end;
for i=1:NB,
   % select from the measured set of N data points a new 
   % hypothetical data set which is generated by randomly 
   % drawing, with uniform probability,  N points from the
   % original data set. 
   indx = floor( (N-1) * rand([N,1]) ) + 1;
   Hx=X(indx,:);
   Hy=Y(indx);
   CB(i,:) = (Hx\Hy)';
end;
% estimated standard error(s)
S=std(CB);

%%%% T-value(s)
T=C./S;

%%%% significance level(s) for Ho: C==0
Ncoef = size(X,2);
df    = N-Ncoef;
for i=1:Ncoef
  Xb = df/(df + T(i)^2);  % see press et al, pp 228 eqn 6.4.9
  Ab = df/2;
  Bb = 1/2 ;
  Pc(i) = betainc(Xb,Ab,Bb);
end;

%%%% partial correlation coefficients
Rp = T./sqrt( T.^2 + df ); 

% Multiple linear correlation coefficient,
% correct for number of regressors
YM = X*C';
R  = corrcoef(Y,YM);
R2 = R(1,2)^2;
R2 = ( (N-1)*R2 - length(C) )./ (N-length(C)-1);
R  = sqrt(R2);
Pr = r_signif_jo(R,N);

%%%% Test significance of the regression
% Anova Analysis
df1 = 1;                      

% Explained variance (by regression)
EV  = sum((YM-mean(Y)).^2)/df1;
df2 = N-Ncoef;                

% Unexplained variance (residual)
UV  = sum((Y-YM).^2)/df2;       
% F-ratio
F   = EV/UV;

%%%% significance level F-test
Xb = df2/(df2 + df1*F);  % see press et al, pp 228 eqn 6.4.9
Ab = df2/2; 
Bb = df1/2 ;
Pf = 2*betainc(Xb,Ab,Bb);
if (Pf>1), Pf = 2-Pf; end;
